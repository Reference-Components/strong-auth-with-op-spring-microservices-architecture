version: "3.2"

networks:
  backend:
    driver: bridge

services:
  sessioncache:
    image: redis:6.2-alpine
    container_name: sessioncache
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    networks:
      backend:
        aliases:
          - "sessioncache"
  configserver:
    image: configserver:latest
    build:
      context: ./../configserver
      dockerfile: Dockerfile
    ports:
      - "8071:8071"
    networks:
      backend:
        aliases:
          - "configserver"
  eurekaserver:
    image: eurekaserver:latest
    build:
      context: ./../eurekaserver
      dockerfile: Dockerfile
    ports:
      - "8070:8070"
    networks:
      backend:
        aliases:
          - "eurekaserver"
  gatewayserver:
    image: gatewayserver:latest
    build:
      context: ./../gatewayserver
      dockerfile: Dockerfile
    ports:
      - "8072:8072"
    environment:
      PROFILE: "default"
      SERVER_PORT: "8072"
      CONFIGSERVER_URI: "http://configserver:8071"
      EUREKASERVER_URI: "http://eurekaserver:8070/eureka/"
      EUREKASERVER_PORT: "8070"
      CONFIGSERVER_PORT: "8071"
    networks:
      backend:
        aliases:
          - "gateway"
  identityservice:
    image: identityservice:latest
    build:
      context: ./../identity-service
      dockerfile: Dockerfile
    environment:
      PROFILE: "dev"
      CONFIGSERVER_URI: "http://configserver:8071"
      CONFIGSERVER_PORT: "8071"
    ports:
      - "8080:8080"
    networks:
      backend:
        aliases:
          - "identityservice"
  infoservice:
    image: infoservice:latest
    build:
      context: ./../info-service
      dockerfile: Dockerfile
    environment:
      PROFILE: "dev"
      CONFIGSERVER_URI: "http://configserver:8071"
      CONFIGSERVER_PORT: "8071"
    ports:
      - "8081:8081"
    networks:
      backend:
        aliases:
          - "infoservice"
  resourceservice:
    image: resourceservice:latest
    build:
      context: ./../resource-service
      dockerfile: Dockerfile
    environment:
      PROFILE: "dev"
      CONFIGSERVER_URI: "http://configserver:8071"
      CONFIGSERVER_PORT: "8071"
    ports:
      - "8082:8082"
    networks:
      backend:
        aliases:
          - "resourceservice"
  frontend:
    container_name: frontend
    build:
      context: ./../frontend
      dockerfile: prod.Dockerfile
    environment:
      REACT_APP_GATEWAY_URI: "http://gatewayserver:8071"
    ports:
      - "3000:3000"
    networks:
      backend:
        aliases:
          - "frontend"
